# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  workflow_call:
  push:
    branches: [ "feature/*" ]
  pull_request:
    branches: [ "main", "develop" ]

  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build-and-test:
    runs-on: ubuntu-22.04
    strategy:
        fail-fast: false
        matrix:
          # os: [ windows, macos, ubuntu ]
          node-version: [18.x]
    # concurrency: # group: ${{ github.workflow }}-${{ github.ref }}-build-${{ matrix.os }}-${{ matrix.node-version }}
    #   group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.node-version }}
    #   cancel-in-progress: true
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - name: Run install
      uses: borales/actions-yarn@v4
      with:
        cmd: install # will run `yarn install` command
    - name: Test
      uses: borales/actions-yarn@v4
      with:
        cmd: test # will run `yarn install` command


  deploy:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    needs: build-and-test
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set release tag
      id: set_tag
      run: echo "RELEASE_TAG=v$(echo ${{ GITHUB_REF }} | awk -F'/' '{print ${{3}} }')" >> ${{ GITHUB_ENV }}    
    - name: Login to GitHub Container Registry
      run: echo "${{ USERMANAGEMENTSECRET.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      env:
          IMAGE_NAME: user_management
          RELEASE_TAG: ${{ env.RELEASE_TAG }}

      ###run: |
      ###  docker build --pull -t ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$RELEASE_TAG .
      ###  docker push ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$RELEASE_TAG

    # - run: |
    #       if [[ "${{ BRANCH_NAME }}" == "${{ DEFAULT_BRANCH }}" ]]; then
    #         tag="${{ RELEASE_TAG }}" 
    #         echo "Running on default branch '${{ DEFAULT_BRANCH }}': tag = ${{tag}}"
    #         docker build --pull -t ghcr.io/${{ github.repository_owner }}/${{ IMAGE_NAME }}:${{tag}} .
    #         docker push ghcr.io/${{ github.repository_owner }}/${{ IMAGE_NAME }}:${{tag}}
    #       else
    #         tag="develop"
    #         echo "Running on branch '${{ BRANCH_NAME }}': tag = ${{tag}}"
    #         docker build --pull -t ghcr.io/${{ github.repository_owner }}/${{ IMAGE_NAME }}:${{tag}} .
    #         docker push ghcr.io/${{ github.repository_owner }}/${{ IMAGE_NAME }}:${{tag}}
    #       fi
    - run: |
          if [[ "${{ BRANCH_NAME }}" == "${{ DEFAULT_BRANCH }}" ]]; then
            tag="${{ RELEASE_TAG }}" 
            echo "Running on default branch '${{ DEFAULT_BRANCH }}': tag = ${{tag}}"
          else
            tag="develop"
            echo "Running on branch '${{ BRANCH_NAME }}': tag = ${{tag}}"
          fi
    # concurrency:
    #   # group: ${{ github.workflow }}-${{ github.ref }}-build-${{ matrix.os }}-${{ matrix.node-version }}
    #   group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.node-version }}
    #   cancel-in-progress: true
    # - run: yarn build
 

  # success:
  #   runs-on: ubuntu-22.04
  #   needs:
  #     - build
  #   if: >-
  #     always() && (
  #       contains(join(needs.*.result, ','), 'failure')
  #       || !contains(join(needs.*.result, ','), 'cancelled')
  #     )
  #   steps:
  #     - name: Verify that there were no failures
  #       run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
